import os
import json
import requests
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, CallbackQueryHandler


class FitnessTrainerBot:
    def __init__(self, openrouter_api_key: str):
        self.openrouter_api_key = openrouter_api_key
        self.api_url = "https://openrouter.ai/api/v1/chat/completions"
        self.headers = {
            "Authorization": f"Bearer {self.openrouter_api_key}",
            "HTTP-Referer": "https://github.com/IvanZhutyaev/FitnessTrackingApp",
            "X-Title": "ChatBotKey"
        }

    async def get_ai_response(self, prompt: str) -> str:
        request_data = {
            "model": "mistralai/mistral-7b-instruct",
            "messages": [
                {
                    "role": "system",
                    "content": (
                        "–í—ã ‚Äî –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞–≤–∞—Ç—å —á—ë—Ç–∫–∏–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ "
                        "–∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è —Å–Ω–∞, –ø–∏—Ç–∞–Ω–∏—è, —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, "
                        "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è, —Ä–µ–∂–∏–º–∞ –¥–Ω—è, –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏. –í—ã –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, "
                        "–Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –¥–∞–Ω–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π. –í —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö —Å–ª–µ–¥—É–µ—Ç —Å—Ç—Ä–æ–≥–æ –∏ —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ —Å–æ–æ–±—â–∏—Ç—å, "
                        "—á—Ç–æ –≤–∞—à–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞–º–∏, –∫–∞—Å–∞—é—â–∏–º–∏—Å—è —Ñ–∏—Ç–Ω–µ—Å–∞, –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞."
                    )
                },
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 500,
            "temperature": 0.7
        }

        try:
            response = requests.post(
                self.api_url,
                headers=self.headers,
                json=request_data
            )
            response.raise_for_status()

            response_data = response.json()
            content = response_data["choices"][0]["message"]["content"]
            return content.strip() if content else "–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏."

        except Exception as e:
            return f"–û—à–∏–±–∫–∞: {str(e)}"


class TelegramBot:
    def __init__(self, token: str, fitness_bot: FitnessTrainerBot):
        self.token = token
        self.fitness_bot = fitness_bot
        self.app = Application.builder().token(self.token).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.app.add_handler(CommandHandler("start", self.start))
        self.app.add_handler(CommandHandler("help", self.help_command))
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))

    async def start(self, update: Update, context: CallbackContext) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start"""
        welcome_text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä.\n\n"
            "–ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö, –ø–∏—Ç–∞–Ω–∏–∏ –∏ –∑–¥–æ—Ä–æ–≤–æ–º –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏!\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:\n"
            "- –ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö?\n"
            "- –ö–∞–∫–æ–µ –ø–∏—Ç–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∏–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?\n"
            "- –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è?\n"
            "- –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è?"
        )

        await update.message.reply_text(welcome_text)

    async def help_command(self, update: Update, context: CallbackContext) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /help"""
        help_text = (
                "ü§ñ –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ:\n"
                "- –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è—Ö\n"
                "- –ü–∏—Ç–∞–Ω–∏–∏ –∏ –¥–∏–µ—Ç–∞—Ö\n"
        "- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
        "- –†–µ–∂–∏–º–µ –¥–Ω—è –∏ –∑–¥–æ—Ä–æ–≤–æ–º –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏\n"
        "- –ú–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ü–µ–ª–µ–π\n\n"
        "–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç!"
        )
        await update.message.reply_text(help_text)

    async def handle_message(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_message = update.message.text

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç"
        await context.bot.send_chat_action(
            chat_id=update.effective_chat.id,
            action="typing"
        )

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
        ai_response = await self.fitness_bot.get_ai_response(user_message)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(ai_response)

    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        self.app.run_polling()


if __name__ == "__main__":
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
    OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    fitness_bot = FitnessTrainerBot(OPENROUTER_API_KEY)
    telegram_bot = TelegramBot(TELEGRAM_BOT_TOKEN, fitness_bot)
    telegram_bot.run()